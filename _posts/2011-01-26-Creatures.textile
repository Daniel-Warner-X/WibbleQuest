---
title: "Creatures"
---

Creatures are things you want to fight. The are a subclass of People but have additional functions like responding to commands like fight.

To use them you need to have your player have some health, and a damageRange. Usually this is added in the "_ready_":#ready function.

{% highlight objc %}
Player * player = [Player sharedPlayer];
player.damageRange = NSMakeRange(1, 3);
player.maxHealth = 10;
player.health = 10;
{% endhighlight %}

A fightable character is an instance or subclass of a Creature, they have name, damageRange, and Max Health variables that are self explanatory. 

These go inside the creature subclass .m file: 

{% highlight objc %}
- (NSString *) name {
  return @"Massive Scarey thing";
}

-(int) maxHealth {
  return 10;
}

-(NSRange)damageRange {
  return NSMakeRange(2, 4);
}
{% endhighlight %}

What is less obvious is that you can do lots with what the creature says and how you attack it. There is a handy method called damageModifier which allows you to modify the damage after it's been rolled. For example, in this case the damage is doubled if the user has picked up a keytar.

{% highlight objc %}
-(int)damageTakenModifier:(int)originalDamage {
  // if the player has a keytar, then double the damage
  if([Player has:@"keytar"]){
    return originalDamage * 2;
  }
  return originalDamage;
}  
{% endhighlight %}

The way that the battle is described is quite interesting too, you supply a collection of strings in the form of an array that lets you describe each attack given and received, this means you don't have to have generic "you hit the hippogruff for 5 damage" messages, you can make your own up. Like below.

{% highlight objc %}
-(NSArray*)creatureAttackPhrases{
  return [NSArray arrayWithObjects:
          @"The giant looks at you grimly and causes %i ego damage.",
          @"The giant shakes his head and bruising your ego by %i.",
          @"The giant puts his earphone in hurting your ego by %i.",
         nil];
}

-(NSArray*)playerAttackPhrases{
  return [NSArray arrayWithObjects:
          @"You strut your stuff dealing %i ego damage.",
          @"The giant didnt know what hit him when you did a cool dace doing a whole %i damage.",
          @"You showed the giant your new shoes, he's so impressed! %i damage.",
         nil];
}
{% endhighlight %}

There is a lot of methods you can override in order to get your creatures to be realistic, override as many as you want.

{% highlight objc %}
-(void)beforeTurn;
-(void)afterTurn;
-(void)beforeFight;
-(void)afterFightLost;
-(void)afterFightWon;
{% endhighlight %}

Once you're happy with your class, you just need to add the creature to a room to make everything connect up.