---
title: "Items"
---

Items are objects that can be "picked up and dropped":#pickup, have their "own commands":#commands, can be used and they show up in your inventory. 

The API for whether an item is on the player is all in the Player class, with the functions hasItemByID, getItemByID and removeItemByID, you can see them in use below in the snippet below

{% highlight objc %}
if( [Player hasItemByID:@"bubba"] ){
  Item * bubba = [Player getItemByID:@"bubba"];
  [Player removeItemByID:@"bubba"];
  ...
}
{% endhighlight %}

In this case we're asking if the player has picked up an Item with an id called bubba, if they have then get a copy of it ( for later use ) and remove the one from the inventory.



As Items can have their own commands it makes sense to put commands in them, this also means they can keep their own variables, like this drink command which keeps drinking till drinksLeft is 0. 

{% highlight objc %}
@interface Bubba : Item {
  int drinksLeft;
}

-(void) drink;
@end
{% endhighlight %}

And in the implementation file

{% highlight objc %}
-(void) onUse{
  [self drink];
}

-(void) drink{
  if (drinksLeft > 0) {
    drinksLeft = drinksLeft - 1;
    [WQ print:@"You take a swig from Bubba, it's pretty refreshing"];
  }else{
    [WQ print:@"Oh.. Looks like Bubba is empty."]; 
  }
}
{% endhighlight %}

h2. Common Item use cases

Here are some example onUse functions to help you get an idea of how to make Items do what you want.

h3. Unlocking a door

{% highlight objc %}
-(void) onUse{
  // Make sure we are in the right room.
  if([Player isIn:@"cabin"]){
    [Room connectRoomID:@"cabin" connectWestToRoomID:@"carriage"];
    [Room current].description = @"Your room is untidy, to the west is the carriage.";
    [WQ print:@"You put the key in the keyhole, and turn, unlocking the door."];
  }
}
{% endhighlight %}

h3. Teleporting a Player

{% highlight objc %}
-(void) onUse{
    [WQ print:@"You use the turnkey, knowing full well what awaits you on the other side."];
    [Player teleportToRoomWithID:@"voldemortscastle"];
}
{% endhighlight %}


h3. Mixing two Items to make one

{% highlight objc %}
-(void) onUse {
  if( [Inventory hasItem:@"candle"] ){
    [WQ print:@"You set fire to the candle, turning it into a torch."];
    
    Torch * torch = [Torch alloc] init];
    [Inventory addItem: torch];
    
    [Inventory removeItemByID:@"candle"];
    [Inventory removeItemByID:@"lighter"];
  }else{
    [WQ print:@"You don't know what to use the Lighter with."];
  }
}
{% endhighlight %}
